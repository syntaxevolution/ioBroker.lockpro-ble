{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["import * as utils from \"@iobroker/adapter-core\";\r\nimport Switchbot = require(\"node-switchbot\");\r\n\r\n/**\r\n * ioBroker adapter class for SwitchBot Lock Pro over BLE (no cloud).\r\n * `node-switchbot` exports a class, so we must use `new`.\r\n * We keep the types as `any` to avoid TypeScript errors due to missing typings.\r\n */\r\nclass LockProBle extends utils.Adapter {\r\n    private sb: any;          // SwitchBot BLE transport\r\n    private lock?: any;       // WoSmartLock instance\r\n    private pollTimer?: NodeJS.Timeout;\r\n\r\n    constructor(options: Partial<utils.AdapterOptions> = {}) {\r\n        super({ ...options, name: \"lockpro-ble\" });\r\n\r\n        // ioBroker EventEmitter generics are missing \u2013 force-cast to any\r\n        (this as any).on(\"ready\", this.onReady.bind(this));\r\n        (this as any).on(\"stateChange\", this.onStateChange.bind(this));\r\n        this.on(\"unload\", this.onUnload.bind(this));\r\n\r\n        // instantiate the SwitchBot BLE transport (class)\r\n        this.sb = new Switchbot((this.config as any).bleHci);\r\n    }\r\n\r\n    /** Lifecycle \u2013 called once all configuration is loaded. */\r\n    private async onReady(): Promise<void> {\r\n        const cfg = this.config as any;\r\n        if (!cfg.lockMac) {\r\n            this.log.error(\"No MAC address configured \u2013 aborting.\");\r\n            return;\r\n        }\r\n\r\n        this.log.info(`Scanning for Lock Pro (${cfg.lockMac}) \u2026`);\r\n        await this.sb.startScan();\r\n        try {\r\n            this.lock = await this.sb.waitFirst(\r\n                // \u2026predicate\u2026,\r\n                60000   // bump to 60 s\r\n            );\r\n            this.log.info(\"Lock discovered!\");\r\n        } catch (err) {\r\n            this.log.error(\"waitFirst() timed out or failed: \" + err);\r\n        } finally {\r\n            await this.sb.stopScan();\r\n        }\r\n\r\n        if (!this.lock) throw new Error(\"Lock Pro not found \u2013 check MAC / distance / power\");\r\n        if (this.lock?.rssi !== undefined) this.log.info(`Found Lock Pro via BLE at RSSI ${this.lock.rssi}`);\r\n\r\n        if (cfg.keyId && cfg.encKey) {\r\n            this.lock.setKey(cfg.keyId, cfg.encKey);\r\n        }\r\n\r\n        await this.defineObjects();\r\n        await this.updateStatus();\r\n\r\n        const poll = Number(cfg.poll) || 15;\r\n        this.pollTimer = setInterval(() => this.updateStatus(), poll * 1000);\r\n    }\r\n\r\n    /** Define ioBroker object tree. */\r\n    private async defineObjects(): Promise<void> {\r\n        await this.extendObjectAsync(\"state\", { type: \"channel\" });\r\n\r\n        await this.extendObjectAsync(\"state.locked\", {\r\n            type: \"state\",\r\n            common: { name: \"locked\", type: \"boolean\", role: \"lock\", read: true, write: false },\r\n            native: {}\r\n        });\r\n\r\n        await this.extendObjectAsync(\"state.battery\", {\r\n            type: \"state\",\r\n            common: { name: \"battery\", type: \"number\", role: \"value.battery\", unit: \"%\", read: true, write: false },\r\n            native: {}\r\n        });\r\n\r\n        await this.extendObjectAsync(\"state.door\", {\r\n            type: \"state\",\r\n            common: { name: \"doorState\", type: \"string\", role: \"sensor.door\", read: true, write: false },\r\n            native: {}\r\n        });\r\n\r\n        const button: any = { type: \"state\", common: { role: \"button\", type: \"boolean\", read: false, write: true }, native: {} };\r\n        await this.extendObjectAsync(\"cmd.lock\", button);\r\n        await this.extendObjectAsync(\"cmd.unlock\", button);\r\n        await this.extendObjectAsync(\"cmd.unlockNoUnlatch\", button);\r\n    }\r\n\r\n    /** Poll lock / battery / door status. */\r\n    private async updateStatus(): Promise<void> {\r\n        if (!this.lock) return;\r\n        try {\r\n            const s = await this.lock.getLockState();\r\n            await this.setStateChangedAsync(\"state.locked\", !!s.lockState, true);\r\n            if (typeof s.battery === \"number\") {\r\n                await this.setStateChangedAsync(\"state.battery\", s.battery, true);\r\n            }\r\n            if (s.doorState !== undefined) {\r\n                await this.setStateChangedAsync(\"state.door\", s.doorState, true);\r\n            }\r\n        } catch (e) {\r\n            this.log.error(`Status update failed: ${e}`);\r\n        }\r\n    }\r\n\r\n    /** Handle button presses. */\r\n    private async onStateChange(id: string, state: ioBroker.State | null): Promise<void> {\r\n        if (!state || state.ack || !this.lock) return;\r\n        try {\r\n            if (id.endsWith(\"cmd.lock\")) await this.lock.lock();\r\n            else if (id.endsWith(\"cmd.unlockNoUnlatch\")) await this.lock.unlockNoUnlatch();\r\n            else if (id.endsWith(\"cmd.unlock\")) await this.lock.unlock();\r\n        } catch (e) {\r\n            this.log.warn(String(e));\r\n        } finally {\r\n            await this.setStateAsync(id, false, true);\r\n        }\r\n    }\r\n\r\n    /** Adapter unload. */\r\n    private async onUnload(callback: () => void): Promise<void> {\r\n        if (this.pollTimer) clearInterval(this.pollTimer);\r\n        try {\r\n            await this.sb.stopScan();\r\n        } catch {\r\n            // ignore\r\n        }\r\n        callback();\r\n    }\r\n}\r\n\r\n// Export factory and standalone execution\r\nexport = (o?: Partial<utils.AdapterOptions>) => new LockProBle(o);\r\nif (require.main === module) new LockProBle();"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA,YAAuB;AACvB,MAAO,YAAY,QAAQ;AAO3B,MAAM,mBAAmB,MAAM,QAAQ;AAAA,EAC3B;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA,EAER,YAAY,UAAyC,CAAC,GAAG;AACrD,UAAM,EAAE,GAAG,SAAS,MAAM,cAAc,CAAC;AAGzC,IAAC,KAAa,GAAG,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC;AACjD,IAAC,KAAa,GAAG,eAAe,KAAK,cAAc,KAAK,IAAI,CAAC;AAC7D,SAAK,GAAG,UAAU,KAAK,SAAS,KAAK,IAAI,CAAC;AAG1C,SAAK,KAAK,IAAI,UAAW,KAAK,OAAe,MAAM;AAAA,EACvD;AAAA;AAAA,EAGA,MAAc,UAAyB;AA1B3C;AA2BQ,UAAM,MAAM,KAAK;AACjB,QAAI,CAAC,IAAI,SAAS;AACd,WAAK,IAAI,MAAM,4CAAuC;AACtD;AAAA,IACJ;AAEA,SAAK,IAAI,KAAK,0BAA0B,IAAI,OAAO,UAAK;AACxD,UAAM,KAAK,GAAG,UAAU;AACxB,QAAI;AACA,WAAK,OAAO,MAAM,KAAK,GAAG;AAAA;AAAA,QAEtB;AAAA;AAAA,MACJ;AACA,WAAK,IAAI,KAAK,kBAAkB;AAAA,IACpC,SAAS,KAAK;AACV,WAAK,IAAI,MAAM,sCAAsC,GAAG;AAAA,IAC5D,UAAE;AACE,YAAM,KAAK,GAAG,SAAS;AAAA,IAC3B;AAEA,QAAI,CAAC,KAAK,KAAM,OAAM,IAAI,MAAM,wDAAmD;AACnF,UAAI,UAAK,SAAL,mBAAW,UAAS,OAAW,MAAK,IAAI,KAAK,kCAAkC,KAAK,KAAK,IAAI,EAAE;AAEnG,QAAI,IAAI,SAAS,IAAI,QAAQ;AACzB,WAAK,KAAK,OAAO,IAAI,OAAO,IAAI,MAAM;AAAA,IAC1C;AAEA,UAAM,KAAK,cAAc;AACzB,UAAM,KAAK,aAAa;AAExB,UAAM,OAAO,OAAO,IAAI,IAAI,KAAK;AACjC,SAAK,YAAY,YAAY,MAAM,KAAK,aAAa,GAAG,OAAO,GAAI;AAAA,EACvE;AAAA;AAAA,EAGA,MAAc,gBAA+B;AACzC,UAAM,KAAK,kBAAkB,SAAS,EAAE,MAAM,UAAU,CAAC;AAEzD,UAAM,KAAK,kBAAkB,gBAAgB;AAAA,MACzC,MAAM;AAAA,MACN,QAAQ,EAAE,MAAM,UAAU,MAAM,WAAW,MAAM,QAAQ,MAAM,MAAM,OAAO,MAAM;AAAA,MAClF,QAAQ,CAAC;AAAA,IACb,CAAC;AAED,UAAM,KAAK,kBAAkB,iBAAiB;AAAA,MAC1C,MAAM;AAAA,MACN,QAAQ,EAAE,MAAM,WAAW,MAAM,UAAU,MAAM,iBAAiB,MAAM,KAAK,MAAM,MAAM,OAAO,MAAM;AAAA,MACtG,QAAQ,CAAC;AAAA,IACb,CAAC;AAED,UAAM,KAAK,kBAAkB,cAAc;AAAA,MACvC,MAAM;AAAA,MACN,QAAQ,EAAE,MAAM,aAAa,MAAM,UAAU,MAAM,eAAe,MAAM,MAAM,OAAO,MAAM;AAAA,MAC3F,QAAQ,CAAC;AAAA,IACb,CAAC;AAED,UAAM,SAAc,EAAE,MAAM,SAAS,QAAQ,EAAE,MAAM,UAAU,MAAM,WAAW,MAAM,OAAO,OAAO,KAAK,GAAG,QAAQ,CAAC,EAAE;AACvH,UAAM,KAAK,kBAAkB,YAAY,MAAM;AAC/C,UAAM,KAAK,kBAAkB,cAAc,MAAM;AACjD,UAAM,KAAK,kBAAkB,uBAAuB,MAAM;AAAA,EAC9D;AAAA;AAAA,EAGA,MAAc,eAA8B;AACxC,QAAI,CAAC,KAAK,KAAM;AAChB,QAAI;AACA,YAAM,IAAI,MAAM,KAAK,KAAK,aAAa;AACvC,YAAM,KAAK,qBAAqB,gBAAgB,CAAC,CAAC,EAAE,WAAW,IAAI;AACnE,UAAI,OAAO,EAAE,YAAY,UAAU;AAC/B,cAAM,KAAK,qBAAqB,iBAAiB,EAAE,SAAS,IAAI;AAAA,MACpE;AACA,UAAI,EAAE,cAAc,QAAW;AAC3B,cAAM,KAAK,qBAAqB,cAAc,EAAE,WAAW,IAAI;AAAA,MACnE;AAAA,IACJ,SAAS,GAAG;AACR,WAAK,IAAI,MAAM,yBAAyB,CAAC,EAAE;AAAA,IAC/C;AAAA,EACJ;AAAA;AAAA,EAGA,MAAc,cAAc,IAAY,OAA6C;AACjF,QAAI,CAAC,SAAS,MAAM,OAAO,CAAC,KAAK,KAAM;AACvC,QAAI;AACA,UAAI,GAAG,SAAS,UAAU,EAAG,OAAM,KAAK,KAAK,KAAK;AAAA,eACzC,GAAG,SAAS,qBAAqB,EAAG,OAAM,KAAK,KAAK,gBAAgB;AAAA,eACpE,GAAG,SAAS,YAAY,EAAG,OAAM,KAAK,KAAK,OAAO;AAAA,IAC/D,SAAS,GAAG;AACR,WAAK,IAAI,KAAK,OAAO,CAAC,CAAC;AAAA,IAC3B,UAAE;AACE,YAAM,KAAK,cAAc,IAAI,OAAO,IAAI;AAAA,IAC5C;AAAA,EACJ;AAAA;AAAA,EAGA,MAAc,SAAS,UAAqC;AACxD,QAAI,KAAK,UAAW,eAAc,KAAK,SAAS;AAChD,QAAI;AACA,YAAM,KAAK,GAAG,SAAS;AAAA,IAC3B,QAAQ;AAAA,IAER;AACA,aAAS;AAAA,EACb;AACJ;AAIA,IAAI,QAAQ,SAAS,OAAQ,KAAI,WAAW;AAD5C,iBAAS,CAAC,MAAsC,IAAI,WAAW,CAAC;",
  "names": []
}
